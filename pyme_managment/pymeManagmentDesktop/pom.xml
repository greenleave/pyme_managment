<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ar.com.greenleave.pyme_managment</groupId>
		<artifactId>pyme_managment</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>pymeManagmentDesktop</artifactId>
	<properties>
		<javafx.version>2.2</javafx.version>
		<exec.mainClass>ar.com.greenleave.pymeManagment.viewDesktop.Main</exec.mainClass>
		<spring.version>3.2.14.RELEASE</spring.version>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>

	<dependencies>
		<!-- JUNIT -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- AOP dependency -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
		</dependency>
		<!-- Jersey -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.8</version>
		</dependency>
		<!-- <dependency> <groupId>com.sun.jersey</groupId> <artifactId>jersey-servlet</artifactId> 
			<version>1.8</version> </dependency> -->



		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>


		<!-- Jersey + Spring -->
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>1.8</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>1.7.1</version>
		</dependency>
		<!-- JAVA FX -->
		<!-- <dependency> <groupId>com.oracle</groupId> <artifactId>javafx</artifactId> 
			<version>${javafx.version}</version> <systemPath>${java.home}/lib/jfxrt.jar</systemPath> 
			<scope>system</scope> </dependency> -->
		<!-- MigLayout -->

		<!-- <dependency> <groupId>com.miglayout</groupId> <artifactId>miglayout-javafx</artifactId> 
			<version>4.2</version> </dependency> -->

		<!-- Apache Commons -->

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- Logging -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

	</dependencies>
	<build>
		<!-- <plugins> <plugin> <groupId>com.zenjava</groupId> <artifactId>javafx-maven-plugin</artifactId> 
			<version>8.5.0</version> <configuration> <mainClass>sarasa.Main</mainClass> 
			</configuration> </plugin> </plugins> -->

		<!-- <plugins> <plugin> <artifactId>maven-shade-plugin</artifactId> <version>2.3</version> 
			<executions> <execution> <phase>package</phase> <goals> <goal>shade</goal> 
			</goals> <configuration> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> 
			<resource>META-INF/spring.handlers</resource> </transformer> <transformer 
			implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> 
			<resource>META-INF/spring.schemas</resource> </transformer> </transformers> 
			</configuration> </execution> </executions> </plugin> -->

		<!-- <plugin> <groupId>com.zenjava</groupId> <artifactId>javafx-maven-plugin</artifactId> 
			<version>1.2</version> <configuration> executable JAR file is built by default 
			(not optional at this stage) <mainClass>ar.com.greenleave.pymeManagment.viewDesktop.Main</mainClass> 
			optionally override settings (such as jar file name, html file, etc) <jarFileName>pymeManagment.jar</jarFileName> 
			optionally sign the jar file if security is needed to create keystore use 
			command line: keytool -genkey -alias example-user -keystore keystore.jks 
			<signJar> <alias>example-user</alias> <storePassword>example-password</storePassword> 
			</signJar> optionally build webstart bundle <webstart> <requiresAllPermissions>true</requiresAllPermissions> 
			</webstart> optionally build native installers <nativeInstallers/> </configuration> 
			</plugin> -->
	</build>
</project>